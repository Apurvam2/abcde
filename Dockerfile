###########
# Backend #
###########

# Dev env base container
FROM phpdockerio/php74-fpm:latest AS backend-dev
WORKDIR "/application"

# Fix debconf warnings upon build
ARG DEBIAN_FRONTEND=noninteractive

# Install selected extensions and other stuff
RUN apt-get update; \
    apt-get -y --no-install-recommends install \
        php7.4-pgsql \
        php7.4-memcached; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/* /var/cache/* /usr/share/doc/*

# Pre-deployment container. The deployed container needs some files generated by yarn
FROM backend-dev AS backend-deployment

ENV APP_ENV=prod
ENV SYMFONY_ENV=prod
ENV APP_SECRET=""

ENV DB_HOST="postgres"
ENV DB_NAME="foo"
ENV DB_USER="user"
ENV DB_PASSWORD="passwd"

ENV RECAPTCHA_SITE_KEY=foo
ENV RECAPTCHA_SECRET_KEY=bar

ENV MAILER_TRANSPORT=""
ENV MAILER_HOST=""
ENV MAILER_PORT=""
ENV MAILER_USER=""
ENV MAILER_PASSWORD=""

ENV CONTACT_EMAIL_TO=""
ENV CONTACT_EMAIL_FROM=""
ENV CONTACT_EMAIL_SUBJECT=""

ENV MEMCACHED_HOST=""
ENV MEMCACHED_PORT=""
ENV CACHE_NAMESPACE=""

ENV ADMIN_USER=""
ENV ADMIN_PASSWORD=""

ENV GOOGLE_ANALYTICS=""

COPY bin/console       /application/bin/
COPY composer.*        /application/
COPY app/AppKernel.php /application/app/

RUN composer install --no-dev --no-scripts; \
    composer clear-cache

COPY infrastructure/php-fpm/php-ini-overrides.ini  /etc/php/7.3/fpm/conf.d/z-overrides.ini
COPY infrastructure/php-fpm/opcache-prod.ini       /etc/php/7.3/fpm/conf.d/z-opcache.ini
COPY infrastructure/php-fpm/php-fpm-pool-prod.conf /etc/php/7.3/fpm/pool.d/z-optimised.conf

COPY app         ./app
COPY web/app.php ./web/
COPY src         ./src

RUN composer dump-autoload --optimize --classmap-authoritative --no-scripts; \
    bin/console cache:warmup; \
    chown www-data:www-data var/ -Rf

############
# Frontend #
############
# Run bower install before we can install bundle's assets
FROM node:alpine AS bower-installer

COPY bower.json .
COPY .bowerrc .

RUN apk add git --no-cache; \
    npm i -g bower; \
    bower install --allow-root

FROM backend-deployment AS backend-bundle-installer

COPY --from=bower-installer src/AppBundle/Resources/public/vendor src/AppBundle/Resources/public/vendor

RUN php bin/console assets:install --env=prod;  \
    php bin/console assetic:dump --env=prod

## Actual deployable frontend image
FROM pagespeed/nginx-pagespeed:stable AS frontend-deployment

WORKDIR /application

RUN mkdir ./web; \
    touch ./web/app.php

COPY infrastructure/nginx/nginx.conf /etc/nginx/conf.d/default.conf

# NGINX config: update php-fpm hostname to localhost (same pod in k8s), activate pagespeed config, deactivate SSL
RUN sed -i "s/php-fpm/localhost/g"       /etc/nginx/conf.d/default.conf; \
    sed -i "s/# %DEPLOYMENT //g"         /etc/nginx/conf.d/default.conf; \
    sed -i "s/listen 443/#listen 443/g"  /etc/nginx/conf.d/default.conf; \
    sed -i "s/ssl_/#ssl_/g"              /etc/nginx/conf.d/default.conf

COPY --from=backend-bundle-installer /application/web/bundles ./web/bundles
COPY --from=backend-bundle-installer /application/web/css     ./web/css
COPY --from=backend-bundle-installer /application/web/js      ./web/js
