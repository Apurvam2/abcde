# Set up gateway to different services
# Note: the resolver and upstream set up per location is done (instead of simply proxy_pass http://servicename) to allow
# the gateway to be online by itself (or with not all services up). Otherwise nginx exits.

# Redirect ALL non HTTPS traffic to HTTPS
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

# Frontend
server {
  server_name  phpdocker.local;

  listen 443 ssl;
  ssl_certificate     /application/infrastructure/local/local.pem;
  ssl_certificate_key /application/infrastructure/local/local.key.pem;

  location / {
      proxy_pass http://frontend:3000;
  }
}

# Backend
server {
  server_name  api.phpdocker.local;

  listen 443 ssl;
  ssl_certificate     /application/infrastructure/local/local.pem;
  ssl_certificate_key /application/infrastructure/local/local.key.pem;

  location / {
      proxy_pass http://api;
  }
}

# Mailhog
server {
  server_name  mailhog.phpdocker.local;

  listen 443 ssl;
  ssl_certificate     /application/infrastructure/local/local.pem;
  ssl_certificate_key /application/infrastructure/local/local.key.pem;

  location / {
      proxy_pass http://mailhog:8025;
  }
}
